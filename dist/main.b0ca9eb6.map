{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.b0ca9eb6.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')//放上面因为无法访问到下面的变量\r\nconst $lastLi = $siteList.find('li.last') //$siteList.find意思是在这个元素里面找到li里面的class为.last的元素\r\nconst x = localStorage.getItem('x')//这个x目前还是个字符串\r\nconst xObject = JSON.parse(x) //JSON.parse把字符串重新变成对象\r\nconst hashMap = xObject || [  //因为用户第一次使用都是空的，parse不解析空字符串的，所以如果xObject存在就使用,不存在就使用默认的数组\r\n    { logo: 'A', url: 'https://www.acfun.cn' },\r\n    { logo: 'B', url: ' https://www.bilibili.com' },\r\n];\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')//删除/开头的内容\r\n}\r\nconst render = () => {\r\n    //我们在渲染hashMap时，需要把之前的li删掉，然后再渲染新的\r\n    $siteList.find('li:not(.last)').remove()//把siteList里面的li都找到，唯独不找到最后的一个li,把找到的li删掉\r\n    hashMap.forEach((node, index) => {//声明一个节点和下标，下标是为了方便查找和删除\r\n        const $li = $(`<li>\r\n    <div class=\"site\">\r\n        <div class=\"logo\">${node.logo}</div>\r\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n        <div class=\"close\">\r\n        <svg class=\"icon\" aria-hidden=\"true\">\r\n        <use xlink:href=\"#icon-close\"></use>\r\n        </svg>\r\n        </div>\r\n    </div>\r\n    </li>`).insertBefore($lastLi)//在最后一个li的前面插入\r\n        //用onclick来代替了a标签的作用\r\n        $li.on('click', () => {\r\n            window.open(node.url)//当你点击li 打开一个新的窗口，地址为node.url\r\n        })\r\n        $li.on('click', '.close', (e) => {//当你点击了里面的close，得到一个事件e，\r\n            e.stopPropagation()           //调用这个事件的 e.stopPropagation() 来阻止冒泡\r\n            hashMap.splice(index, 1)//从index里面删除一个\r\n            render()\r\n        })\r\n    })\r\n}\r\nrender()//声明了render也需要调用\r\n$('.addButton')\r\n    .on('click', () => {\r\n        let url = window.prompt('请问你要贴加的网址是啥?')\r\n        if (url.indexOf('http') !== 0) {//indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。\r\n            url = 'https://' + url\r\n        }\r\n\r\n        console.log(url)\r\n        //${url}意思是插入新的url地址\r\n        hashMap.push({\r\n            logo: simplifyUrl(url)[0], //toUpperCase()使字符变成大写\r\n            url: url\r\n        });\r\n        render();\r\n    })\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap)//JSON.stringify是把对象变成string\r\n    localStorage.setItem('x', string) //在本地的存储值里设置一个x，它的值就是这个string\r\n}\r\n$(document).on('keypress', (e) => {//keypress键盘按下事件\r\n    // const key=e.key\r\n    //console.log(e)\r\n    const { key } = e//key属于 console.log(e)里面的属性\r\n    for (let i = 0; i < hashMap.length; i++) {//遍历hasMap\r\n        if (hashMap[i].logo.toLowerCase() === key) {//如果hasMap的第i个它的logo小写(toLowerCase)===key\r\n            window.open(hashMap[i].url)//那就打开这个i属性对应的网址\r\n        }\r\n    }\r\n})"]}